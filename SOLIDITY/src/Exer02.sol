// SPDX-License-Identifier: MIT
pragma solidity ^0.8.16;
/*
NÃºmero Primo
ğŸ“Œ Objetivo: Criar uma funÃ§Ã£o que verifica se um nÃºmero Ã© primo.

ğŸ“Œ O que vocÃª deve tentar implementar?

Criar uma funÃ§Ã£o pÃºblica e pura.
Retornar true se for primo, false caso contrÃ¡rio.
Um nÃºmero Ã© primo se for maior que 1 e sÃ³ for divisÃ­vel por 1 e por ele mesmo.
ğŸ“Œ Exemplo esperado:

solidity
Copiar
Editar
// Entrada: 7
// SaÃ­da: true

// Entrada: 10
// SaÃ­da: false
*/

contract Exer02 {

    function isPrime(uint _num) public pure returns (bool) {
        if (_num < 2) {
            return false; // NÃºmeros menores que 2 nÃ£o sÃ£o primos
        }
        for (uint i = 2; i * i <= _num; i++) { // Verifica divisores atÃ© a raiz quadrada de _num
            if (_num % i == 0) {
                return false; // Se for divisÃ­vel por qualquer nÃºmero alÃ©m de 1 e ele mesmo, nÃ£o Ã© primo
            }
        }
        return true; // Se passou pelo loop sem encontrar divisores, Ã© primo
    }
}